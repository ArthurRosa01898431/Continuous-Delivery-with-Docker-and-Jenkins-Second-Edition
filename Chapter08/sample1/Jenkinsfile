pipeline {
    agent { label 'docker-agent' }

    triggers {
        pollSCM('* * * * *')
    } 

    stages {
        stage('Check Branch') {
            steps {
                script {
                    def branchName = env.BRANCH_NAME

                    if (branchName == 'main') {
                        echo "Running main branch pipeline..."
                        env.RUN_MAIN = 'true'
                    } else if (branchName.contains('feature')) {
                        echo "Running feature branch pipeline..."
                        env.RUN_FEATURE = 'true'
                    } else {
                        error("Pipeline failed: Branch does not meet execution criteria.")
                    }
                }
            }
        }

        stage('Run tests and generate reports') {
            when {
                expression { env.RUN_MAIN == 'true' } 
            }
            steps {
                sh """
                cd Chapter08/sample1
                chmod +x gradlew
                ./gradlew jacocoTestReport
                ./gradlew jacocoTestCoverageVerification
                """
                publishHTML([
                    target: [
                        reportDir: 'Chapter08/sample1/build/reports/checkstyle',
                        reportFiles: 'index.html',
                        reportName: "jacoco checkstyle" 
                    ]
                ])
            }
        }

        stage('Everything else') {
            when {
                expression { env.RUN_FEATURE == 'true' }
            }
            steps {
                echo 'Running everything else...'
            }
        }
    }

    post {
        success {
            echo 'The pipeline ran successfully!'
        }
        failure {
            echo 'The pipeline failed.'
        }
    }
}