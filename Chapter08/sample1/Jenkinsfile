pipeline {
    agent { label 'docker-agent' }

    stages {
        stage('Check Branch') {
            steps {
                script {
                    def branchName = env.BRANCH_NAME

                    if (branchName == 'main') {
                        echo "Running main branch pipeline..."
                        env.RUN_MAIN = 'true'
                    } else if (branchName != 'main') {
                        echo "Running non main branch pipeline..."
                        env.RUN_NON_MAIN = 'true'
                    } else {
                        error("Pipeline failed: Branch does not meet execution criteria.")
                    }
                }
            }
        }

        stage('Code coverage') {
            when {
                expression { env.RUN_MAIN == 'true' } 
            }
            steps {
                sh """
                cd Chapter08/sample1
                chmod +x gradlew
                ./gradlew jacocoTestReport
                ./gradlew jacocoTestCoverageVerification
                """
            }
        }

        stage('Compile') {
            when {
                expression { env.RUN_NON_MAIN  == 'true' }
            }
            steps {
                    sh """
                    cd Chapter08/sample1
                    chmod +x gradlew
                    ./gradlew compileJava
                    """
               }
        }

        stage('Unit test') {
            when {
                expression { env.RUN_NON_MAIN  == 'true' }
            }
            steps {
                    sh """
                    cd Chapter08/sample1
                    chmod +x gradlew
                    ./gradlew test
                    """
               }
        }
        
        stage('Static code analysis') {
            when {
                expression { env.RUN_NON_MAIN  == 'true' }
            }
            steps {
                    sh """
                    cd Chapter08/sample1
                    chmod +x gradlew
                    ./gradlew checkstyleMain
                    """
               }
        }

        stage('Package') {
            when {
                expression { env.RUN_NON_MAIN  == 'true' }
            }
            steps {
                    sh """
                    cd Chapter08/sample1
                    chmod +x gradlew
                    ./gradlew build
                    """
               }
        }
    }
    post {
        success {
            echo 'The pipeline ran successfully!'
        }
        failure {
            echo 'The pipeline failed.'
        }
        always {
            publishHTML([
                target: [
                    reportDir: 'Chapter08/sample1/build/reports/checkstyle',
                    reportFiles: 'index.html',
                    reportName: "jacoco checkstyle"
                ]
            ])
        }
    }
}